# .github/workflows/docker-build.yml

name: Build and Push Docker Image to GHCR

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Trigger on pushes to the main branch
  # You can also add pull_request triggers, manual triggers (workflow_dispatch), etc.
  # pull_request:
  #   branches: [ "main" ]
  # workflow_dispatch:

env:
  # Define your image name here for GHCR.
  # It's good practice to use lowercase.
  # The image will be named like: ghcr.io/your-username-or-org/your-comfyui-quick-tunnel-image
  IMAGE_NAME: ${{ github.repository_owner }}/your-comfyui-quick-tunnel-image # Replace 'your-comfyui-quick-tunnel-image' with your desired image name

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read      # Needed to checkout the repository
      packages: write    # Needed to push packages (Docker images) to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        # Useful for building multi-platform images, though this Dockerfile is x86-64 focused
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        # A Docker CLI plugin for extended build capabilities with BuildKit
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Login to GitHub Container Registry
        # Uses the GITHUB_TOKEN for authentication, which is automatically available
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # or github.actor
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        # This action helps in creating meaningful tags and labels for the image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }} # Full image name for GHCR
          tags: |
            type=schedule                # Adds a tag for scheduled events (if any)
            type=ref,event=branch        # Adds a tag like 'main' for branch pushes
            type=ref,event=pr            # Adds a tag for pull request events
            type=semver,pattern={{version}} # Adds tags like v1.2.3 if you use git tags
            type=semver,pattern={{major}}.{{minor}} # Adds tags like v1.2
            type=sha                     # Adds a tag with the git commit SHA (e.g., sha-abcdef)
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }} # Adds 'latest' tag only for pushes to main branch


      - name: Build and push Docker image to GHCR
        id: docker_build # Added id here
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          file: ./Dockerfile # Path to your Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Push only if not a pull request (i.e., on direct pushes to 'main')
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Enable GitHub Actions cache for Docker layers (speeds up builds)
          cache-to: type=gha,mode=max

      - name: Image digest
        # Outputs the digest of the pushed image, useful for verification
        if: ${{ success() && github.event_name != 'pull_request' && steps.docker_build.outputs.digest }}
        run: 'echo "Pushed image digest: ${{ steps.docker_build.outputs.digest }}"'

